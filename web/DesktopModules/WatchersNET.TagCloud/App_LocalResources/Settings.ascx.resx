<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="$this.TrayAutoArrange" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <assembly alias="System" name="System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System">
    <value>Private</value>
  </data>
  <data name="lblExlusionList.Help" xml:space="preserve">
    <value>Words from the TagCloud to be excluded</value>
  </data>
  <data name="lblExlusionList.Text" xml:space="preserve">
    <value>Exlusion List</value>
  </data>
  <data name="lblTagsCount.Help" xml:space="preserve">
    <value>Number of Items Shows in the TagCloud</value>
  </data>
  <data name="lblTagsCount.Text" xml:space="preserve">
    <value>Number of Items</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>Here you can modify all Settings for the Module, for example you can set the maxium Tags that will be shown in the TagCloud and the words that are exluded from the TagCloud</value>
  </data>
  <data name="lblPortalId.Help" xml:space="preserve">
    <value>Here you can specify the Portal ID that will be used to show results from.</value>
  </data>
  <data name="lblTagsCloudWidth.Help" xml:space="preserve">
    <value>You Can Set the width value for the Tag Cloud in '%' or 'px'</value>
  </data>
  <data name="lblTagsCloudWidth.Text" xml:space="preserve">
    <value>Tags Cloud Width</value>
  </data>
  <data name="cbCurrentEndDate.Text" xml:space="preserve">
    <value>Always use current Date as End date</value>
  </data>
  <data name="Error.Text" xml:space="preserve">
    <value>Value must be a Number.</value>
  </data>
  <data name="AddExWord.Text" xml:space="preserve">
    <value>Add Exlusion Word</value>
  </data>
  <data name="DeleteExWord.Text" xml:space="preserve">
    <value>Delete selected Exlusion Word</value>
  </data>
  <data name="EditExWord.Text" xml:space="preserve">
    <value>Edit selected Exlusion Word</value>
  </data>
  <data name="SaveExWord.Text" xml:space="preserve">
    <value>Save Exlusion Word</value>
  </data>
  <data name="lblTagsCloudHeight.Help" xml:space="preserve">
    <value>You Can Set the Height value for the Tag Cloud in '%' or 'px'</value>
  </data>
  <data name="lblTagsCloudHeight.Text" xml:space="preserve">
    <value>Tags Cloud Height</value>
  </data>
  <data name="lblTagsLink.Help" xml:space="preserve">
    <value>The Tag can contain a Link to the Portal Search with current word.</value>
  </data>
  <data name="lblTagsLink.Text" xml:space="preserve">
    <value>Tags with Link</value>
  </data>
  <data name="lblBgcolor.Help" xml:space="preserve">
    <value>Color for the Background, alternative set it to transparent</value>
  </data>
  <data name="lblBgcolor.Text" xml:space="preserve">
    <value>Background color</value>
  </data>
  <data name="lblHicolor.Help" xml:space="preserve">
    <value>Optional highlight color</value>
  </data>
  <data name="lblHicolor.Text" xml:space="preserve">
    <value>Highlight color</value>
  </data>
  <data name="lblTcolor.Help" xml:space="preserve">
    <value>The Font color of the tags</value>
  </data>
  <data name="lblTcolor.Text" xml:space="preserve">
    <value>Color of the tags</value>
  </data>
  <data name="lblTcolor2.Help" xml:space="preserve">
    <value>Optional second color for gradient</value>
  </data>
  <data name="lblTcolor2.Text" xml:space="preserve">
    <value>Gradient color</value>
  </data>
  <data name="lblTspeed.Help" xml:space="preserve">
    <value>Allows you to change the speed of the sphere. Options between 25 and 500 work best.</value>
  </data>
  <data name="lblTspeed.Text" xml:space="preserve">
    <value>Rotation speed</value>
  </data>
  <data name="lCommOpt.Text" xml:space="preserve">
    <value>Basic Settings</value>
  </data>
  <data name="lFlashOpt.Text" xml:space="preserve">
    <value>3D Flash Settings</value>
  </data>
  <data name="rangevalidator1.Text" xml:space="preserve">
    <value>Speed Value must be between 25 and 500.</value>
  </data>
  <data name="lblColPic.Text" xml:space="preserve">
    <value>&lt;-- Click on the Box to select a Color</value>
  </data>
  <data name="lblFlashEnabled.Help" xml:space="preserve">
    <value>If you deactivate Flash the Tags will be renderd as A Normal Tag Cloud with Links.</value>
  </data>
  <data name="lblFlashEnabled.Text" xml:space="preserve">
    <value>Flash Enabled?</value>
  </data>
  <data name="lblOccurCount.Help" xml:space="preserve">
    <value>Show Only Tags with a Minimum Occurrence you defined.</value>
  </data>
  <data name="lblOccurCount.Text" xml:space="preserve">
    <value>Minimum Tag Occurrence</value>
  </data>
  <data name="AddTag.Text" xml:space="preserve">
    <value>Add a new Tag</value>
  </data>
  <data name="DeleteTag.Text" xml:space="preserve">
    <value>Delete the Selected Tag?</value>
  </data>
  <data name="EditTag.Text" xml:space="preserve">
    <value>Edit a Tag selected from the List.</value>
  </data>
  <data name="lblCustomTags.Help" xml:space="preserve">
    <value>Create and Manage your own Tags. And define a Tag Weight and URL for each Tag.</value>
  </data>
  <data name="lblCustomTags.Text" xml:space="preserve">
    <value>Custom Tags List</value>
  </data>
  <data name="lblTagMode.Help" xml:space="preserve">
    <value>Choose between Tags generated from the Search Items, Or create your on Tags List</value>
  </data>
  <data name="lblTagMode.Text" xml:space="preserve">
    <value>Choose Tag Mode</value>
  </data>
  <data name="lblCustomTag.Help" xml:space="preserve">
    <value>Create or Modify a Tag and specify a Tag Name, Weight and URL.</value>
  </data>
  <data name="lblCustomTag.Text" xml:space="preserve">
    <value>Create/Modify Tag</value>
  </data>
  <data name="SaveTag.Text" xml:space="preserve">
    <value>Save Tag</value>
  </data>
  <data name="lblTagsLinkChk.Help" xml:space="preserve">
    <value>Check Tag Urls if the current User can see Page of the Tag or Tag Link, if Not The Tag is not shown. </value>
  </data>
  <data name="lblTagsLinkChk.Text" xml:space="preserve">
    <value>Check Url Visiblity</value>
  </data>
  <data name="lCustomTag.Text" xml:space="preserve">
    <value>Tag Name:</value>
  </data>
  <data name="lTagUrl.Text" xml:space="preserve">
    <value>Tag URL:</value>
  </data>
  <data name="lTagWeight.Text" xml:space="preserve">
    <value>Tag Weight:</value>
  </data>
  <data name="cmdExport.Text" xml:space="preserve">
    <value>Export Custom Tags</value>
  </data>
  <data name="cmdImport.Text" xml:space="preserve">
    <value>Import Custom Tags</value>
  </data>
  <data name="lblSkin.Help" xml:space="preserve">
    <value>Ein Skin für die Html (ohne Flash) TagCloud kann hier definiert werden.</value>
  </data>
  <data name="lblSkin.Text" xml:space="preserve">
    <value>Html TagCloud Skin</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>TagCloud Settings</value>
  </data>
  <data name="AllTerms.Text" xml:space="preserve">
    <value>Show All Terms</value>
  </data>
  <data name="lblSortTags.Help" xml:space="preserve">
    <value>Sort the Tags by Alphabet otherwise there are Random</value>
  </data>
  <data name="lblSortTags.Text" xml:space="preserve">
    <value>Sort Tags Alphabetically</value>
  </data>
  <data name="lblTagSeparator.Help" xml:space="preserve">
    <value>Define an Separator between each Tag, for example an '|'.</value>
  </data>
  <data name="lblTagSeparator.Text" xml:space="preserve">
    <value>Tag Separator</value>
  </data>
  <data name="lblTaxMode.Help" xml:space="preserve">
    <value>Choose between All Terms or only Terms of Current Tab</value>
  </data>
  <data name="lblTaxMode.Text" xml:space="preserve">
    <value>Select Terms Mode</value>
  </data>
  <data name="TabTerms.Text" xml:space="preserve">
    <value>Show Terms of Current Tab</value>
  </data>
  <data name="CustomVocabulary.Text" xml:space="preserve">
    <value>Select Vocabularies</value>
  </data>
  <data name="lblChooseVoc.Help" xml:space="preserve">
    <value>Select from which Vocabularies you want to display the terms as Tags.</value>
  </data>
  <data name="lblChooseVoc.Text" xml:space="preserve">
    <value>Select a Vocabulary</value>
  </data>
  <data name="SaveLocale.Text" xml:space="preserve">
    <value>Save Locale</value>
  </data>
  <data name="ShowLocalize.Text" xml:space="preserve">
    <value>Show Localizations</value>
  </data>
  <data name="DeleteLocale.Text" xml:space="preserve">
    <value>Delete the Selected Locale?</value>
  </data>
  <data name="lblEndDate.Help" xml:space="preserve">
    <value>End Date is always Today</value>
  </data>
  <data name="lblEndDate.Text" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="lblStartDate.Help" xml:space="preserve">
    <value>Define the Start Date to get the Referrals from the Sitelog</value>
  </data>
  <data name="lblStartDate.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="lblModuleVentrian.Help" xml:space="preserve">
    <value>Select the Module Instance if any Module Instance is found on the Selected Tab.</value>
  </data>
  <data name="lblModuleVentrian.Text" xml:space="preserve">
    <value>Select the Module Instance</value>
  </data>
  <data name="lblTabVentrian.Help" xml:space="preserve">
    <value>Select the Tab Where the Modul Instance is installed.</value>
  </data>
  <data name="lblTabVentrian.Text" xml:space="preserve">
    <value>Select the Tab of the Module</value>
  </data>
  <data name="SelectPage.Text" xml:space="preserve">
    <value>Select A Page</value>
  </data>
</root>